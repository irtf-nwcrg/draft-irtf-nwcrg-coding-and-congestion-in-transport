<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc strict="yes" ?>
<?rfc toc="yes"?>
<?rfc tocdepth="4"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>
<rfc
    category="info"
        docName="draft-irtf-nwcrg-coding-and-congestion-01"
    ipr="trust200902">
  <!-- category values: std, bcp, info, exp, and historic
     ipr values: full3667, noModification3667, noDerivatives3667
     you can add the attributes updates="NNNN" and obsoletes="NNNN"
     they will automatically be output with "(if approved)" -->

  <!-- ***** FRONT MATTER ***** -->

  <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the
         full title is longer than 39 characters -->

    <title abbrev="Coding and congestion">Coding and congestion control in transport</title>

    <author fullname="Nicolas Kuhn" initials="N" surname="Kuhn">
      <organization>CNES</organization>
      <address>
      <email>nicolas.kuhn@cnes.fr</email>
      </address>
    </author>
      
    <author fullname="Emmanuel Lochin" initials="E" surname="Lochin">
      <organization>ISAE-SUPAERO</organization>
      <address>
      <email>emmanuel.lochin@isae-supaero.fr</email>
      </address>
    </author>

    <author fullname="Francois Michel" initials="F" surname="Michel">
      <organization>UCLouvain</organization>
      <address>
      <email>francois.michel@uclouvain.be</email>
      </address>
    </author>

    <author fullname="Michael Welzl" initials="M" surname="Welzl">
      <organization>University of Oslo</organization>
      <address>
      <email>michawe@ifi.uio.no</email>
      </address>
    </author>
      
    <date year="2020" />

    <!-- If the month and year are both specified and are the current ones, xml2rfc will fill
         in the current day for you. If only the current year is specified, xml2rfc will fill
     in the current day and month for you. If the year is not the current one, it is
     necessary to specify at least a month (xml2rfc assumes day="1" if not specified for the
     purpose of calculating the expiry date).  With drafts it is normally sufficient to
     specify just the year. -->

    <!-- Meta-data Declarations -->

    <area>Transport</area>

    <workgroup>NWCRG</workgroup>

    <!-- WG name at the upperleft corner of the doc,
         IETF is fine for individual submissions.
     If this element is not present, the default is "Network Working Group",
         which is used by the RFC Editor as a nod to the history of the IETF. -->

    <keyword>Coding, congestion</keyword>

    <!-- Keywords will be incorporated into HTML output
         files in a meta tag but they have no effect on text or nroff
         output. If you submit your draft to the RFC Editor, the
         keywords will be used for the search engine. -->

        <!-- ######################################################-->
        <!-- ######################################################-->
        <!-- Head of the document -->
        <!-- ######################################################-->
        <!-- ######################################################-->

    <abstract>
        <t>Coding is a reliability mechanism that is distinct and separated from the loss detection of congestion controls. Using coding can be a useful way to better deal with tail losses or with networks with non-congestion losses. However, coding mechanisms should not hide congestion signals. This memo offers a discussion of how coding and congestion control can interact.</t>
        <t>This document is the product of the Coding for Efficient Network Communications Research Group (NWCRG). The scope of the document is end-to-end communications: coding for tunnels is out-of-the scope of the document.</t>
    </abstract>
  </front>

  <middle>

    <section anchor="sec:introduction" title="Introduction">
	<t>There are cases where deploying coding improves the quality of the transmission. As an example, it may take time for the server to detect tail losses and this would impact the experience of applications using short flows. Another example are networks where non-congestion losses are persistent and prevent a sender from exploiting the link capacity.</t>
	<t>Coding is a reliability mechanism that is distinct and separated from the loss detection of congestion controls. <xref target="RFC5681"/> defines TCP as a loss-based congestion control; because coding repairs such losses, blindly applying it may easily lead to an implementation that also hides a congestion signal to the sender. It is important to ensure that such information hiding does not occur.</t>
        <t>This memo discusses how coding and congestion control mechanisms can coexist. One objective is to help the research community consider congestion control aspects when proposing coding solutions.</t>
        <t>This document represents the collaborative work and consensus of the Coding for Efficient Network Communications Research Group (NWCRG); it is not an IETF product and is not a standard. The proposed recommendations apply for coding at the transport or application layer. Coding for tunnels is out of scope for the document.</t>
    </section>

        <!-- ######################################################-->
        <!-- ######################################################-->
        <!-- Body of the document -->
        <!-- ######################################################-->
        <!-- ######################################################-->

        <!-- ######################################################-->
        <!-- New section -->
        <!-- ######################################################-->
       
        <!-- ######################################################-->
        <!-- New section -->
        <!-- ######################################################-->
        <section anchor="sec:notations" title="Separate channels, separate entities">
        <t><xref target="fig:sep-channel"></xref> presents the notations that will be used in this document and introduce the Congestion Control (CC) and Forward Erasure Correction (FEC) channels. The Congestion Control channel carries data packets (from a server to a client) and a potential information signaling the packets that have been received (from the client to the server). The Forward Erasure Correction channel carries coded packets (from the server to the client) and a potiential information signaling the packets that have been repaired (from the client to the server). It is worth pointing out that there are cases where these channels are not separated.</t>
        <figure anchor="fig:sep-channel" title="Notations and separate channels">
        <artwork>
 Client                          Server

+------+                        +------+
|      | -- { data packet  -----|      |
|  CC  |                        |  CC  |
|      | -- received packet } --|      |
+------+                        +------+

+------+                        +------+
|      | -- { coded packet  ----|      |
| FEC  |                        | FEC  |
|      | -- repaired packet } --|      |
+------+                        +------+
        </artwork>
        </figure>
        
        <t>Inside a host, the CC and FEC entities can be regarded as
            conceptually separate:</t>

        <figure anchor="fig:sep-entities" title="Separate entities">
        <artwork>
               |                  --------                  ^
               | data             |      | data,            | sending
               |                  |      | requirements     | rate (or
               v                  |      v                  | window)
+-----------------------------+   |    +-------------------------+
|             FEC             | <![CDATA[<---->]]> |           CC            |
+-----------------------------+   |    +-------------------------+
  ^                   |           |              ^
  | information       | coded     |              | network
  | about repaired    | data      |              | measurements
  | ratio             -------------              |
        </artwork>
        </figure>

	<t> As <xref target="fig:sep-entities"></xref> shows, the inputs to FEC (data to work upon,
        and signaling from the receiver about losses and/or repaired blocks)
        are distinct from the inputs to CC. The latter calculates a
        sending rate or window from network measurements, and it takes
        the data to send as input, sometimes along with application requirements
        such as upper/lower rate bounds, periods of quiescence, or a priority.</t>

        <t> It is not clear that the ACK signals feeding into a congestion control
            algorithm are useful to FEC in their raw form, and vice versa - information
            about repaired blocks may be quite irrelevant to a CC algorithm. However,
            there can be meaningful other interactions (indicated by the horizontal double arrow)
            between the two entities, usually as a result of their operation rather than
            by relaying their own raw inputs. For example, the network measurements carried
            out by CC can yield a longer-term statistical measure such as a loss ratio
            which is useful input for a FEC coding scheme. Similarly, unequal error
            protection using fountain codes can be used to assign different priorities
            to blocks of data, and these priorities can be honored by a CC mechanism.</t>
    </section>

        <!-- ######################################################-->
        <!-- New section -->
        <!-- ######################################################-->
        <section anchor="sec:scope" title="Scope">
		<t>This section describes the scope of the document.</t>
        <section anchor="sec:scope:appli" title="Type of application">
            <t>The document focuses on reliable transmissions.</t>
        </section>
        <section anchor="sec:scope:e2e" title="End-to-end">
            <t>The document focuses on end-to-end coding, i.e. cases where coding is added at the server and client end points. The discussions should then consider fairness with non-coding solutions.</t>
        </section>
	<section anchor="sec:scope:scope" title="Objective of the document">
		<t><xref target="sec:notations"></xref> presents that FEC and CC can be seen as two separate channels. In practice, implementations may mix the signals that are exchanged on these channels. This document discusses how FEC and CC relate. [NK: We may want to later add that we provide recommendations - but for the moment, we may just list the server side coding solutions in the layering approach without providing recommendations for each case]</t>
	</section>
    </section>

        <!-- ######################################################-->
        <!-- New section -->
        <!-- ######################################################-->
        <section anchor="sec:fec-above" title="FEC above the transport">
		<t><xref target="fig:fec-above"></xref> illustrates the FEC above the transport case.</t> 	
        <figure anchor="fig:fec-above" title="FEC above the transport">
        <artwork>
               |                  --------                  ^
               | data             |      | data,            | sending
               |                  |      | requirements     | rate (or
               v                  |      v                  | window)
+-----------------------------+   |    +--------------------------+
|             FEC             |        | Transport (including CC) |
+-----------------------------+   |    +--------------------------+
  ^                   |           |              ^
  | information       | coded     |              | network
  | about repaired    | data      |              | measurements
  | ratio             -------------              |
        </artwork>
	</figure>
	<t>The coded packets are sent within what the congestion window allows.</t>
	<t>TODO : ADD MORE TEXT</t>
	</section>

        <!-- ######################################################-->
        <!-- New section -->
        <!-- ######################################################-->
        <section anchor="sec:fec-in" title="FEC within the transport">
		<t><xref target="fig:fec-in"></xref> illustrates the FEC within the transport case.</t> 	
        <figure anchor="fig:fec-in" title="FEC in the transport">
        <artwork>
	  	       |                 
		       | data, requirements
		       |  
		       v
	+---------------------+
	| Transport           | 
	| +-----+  +-----+    | coded data
	| | FEC |  | CC  |    | 
	| +-----+  +-----+    | ----->
	|                     | 
	+---------------------+
		^          ^
		|          |
	information    network
	about          measurements
	repaired ratio           
        </artwork>
	</figure>
        
        <t>The coded packets are sent within what the congestion window allows, such as in <xref target="CTCP"/>. Examples of the solution would be sending coded packets when there is no more data to transmit or preferably send coded packets instead of the following packets in the send buffer.</t>
	<t>TODO : ADD MORE TEXT</t>
	</section>

        <!-- ######################################################-->
        <!-- New section -->
        <!-- ######################################################-->
        <section anchor="sec:fec-below" title="FEC below the transport">
	<t><xref target="fig:fec-below"></xref> illustrates the FEC below the transport case.</t> 	
        <figure anchor="fig:fec-below" title="FEC below the transport">
        <artwork>
               |                  --------                  ^
               | data             |      | data            | coded 
               | requirements     |      |                 | data
               v                  |      v                 | 
+-----------------------------+   |    +-------------------------+
| Transport (including CC)    |        |           FEC           |
+-----------------------------+   |    +-------------------------+
  ^                   |           |              ^
  | network           |           |              | information
  | measurements      |           |              | about repair
  |                   -------------              | ratio
        </artwork>
	</figure>
        <t>The coded packets are sent on top of what is allowed by the congestion control. Examples of the solution could be adding a given percentage of the congestion window as supplementary packets or sending a given amount of coded packets at a given rate. The redundancy flow can be decorrelated from the congestion control that manages source packets: a secondary congestion control can be introduced, such as in coupled congestion control for RTP media <xref target="I-D.ietf-rmcat-coupled-cc"/>. An example would be to exploit a lower than best-effort congestion control <xref target="RFC6297"/>.</t>
	</section>

        <!-- ######################################################-->
        <!-- ######################################################-->
        <!-- Tail of the document -->
        <!-- ######################################################-->
        <!-- ######################################################-->

    <section anchor="sec:acknowledgements" title="Acknowledgements">
    <t>Many thanks to Spencer Dawkins, Dave Oran, Carsten Bormann, Vincent Roca and Marie-Jose Montpetit for their useful comments that helped improve the document.</t>
    </section>

    <section anchor="sec:IANA" title="IANA Considerations">
    <t>This memo includes no request to IANA.</t>
    </section>

    <section anchor="sec:ecurity" title="Security Considerations">
    <t>There is no security considerations required for this document.</t>
    </section>
    </middle>

    <!--  *****BACK MATTER ***** -->
    <back>
    <!-- References split into informative and normative -->
    <!-- There are 2 ways to insert reference entries from the citation libraries:
    1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
    2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
    (for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")
    Both are cited textually in the same manner: by using xref elements.
    If you use the PI option, xml2rfc will, by default, try to find included files in the same
    directory as the including file. You can also define the XML_LIBRARY environment variable
    with a value containing a set of directories to search.  These can be either in the local
    filing system or remote ones accessed by http (http://domain/dir/... ).-->

    <!-- <references title="Normative References">
        &RFC2119;
    </references> -->

    <references title="Informative References">
        <!-- <?rfc include="reference.RFC.3168.xml"?> -->
        <?rfc include="reference.RFC.5681.xml"?>
        <?rfc include="reference.RFC.6297.xml"?>
	<!-- <?rfc include="reference.RFC.7567.xml"?> -->
	<!-- <?rfc include="reference.RFC.8511.xml"?> -->
        <?rfc include="reference.I-D.ietf-rmcat-coupled-cc.xml"?>
        <!-- <?rfc include="reference.I-D.ietf-tcpm-rto-consider.xml"?> -->
        <!-- <?rfc include="reference.I-D.ietf-tcpm-rack.xml"?> -->
	<!-- <?rfc include="reference.I-D.swett-nwcrg-coding-for-quic.xml"?> -->
        <reference anchor="CTCP">
            <front>
                <title>Network Coded TCP (CTCP)</title>
                    <author initials="M" surname="Kim (et al.)">
                    </author>
                    <date year="2013"/>
                </front>
                <seriesInfo name="arXiv" value="1212.2291v3"/>
            </reference>
           </references>
    </back>
</rfc>
